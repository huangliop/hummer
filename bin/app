#!/usr/bin/env node
const exec = require('child_process').execSync;
const fs=require('fs')
function showHelp(isErrorCmd){
    isErrorCmd&&console.log("请输入正确的命令");
    console.log("hummer mobile [dir]:创建适用于移动设备的web工程，dir为输出的目录");
    console.log("hummer pc [dir]:创建适用于PC的web工程，dir为输出的目录");
    console.log("hummer component [dir]:创建组件模板工程，dir为工程名称");
}
function install(platform,dir){
    console.log('下载中请等待...');
    const url='https://github.com/huangliop/hummer-mobile.git';
    exec(`git clone ${url} ${dir}`);
    if(process.platform==='win32'){
        exec(`rmdir ${dir}\\.git /s /q`); 
        if(platform==='pc'){
            exec(`rmdir ${dir}\\src\\base-components /s /q`);
        }
    }else{
        exec(`rm -rf ${dir}/.git`); 
        if(platform==='pc'){
            exec(`rm -rf ${dir}/src/base-components`)
        }
    }
    if(platform==='pc'){
        modifyFile(`${dir}/config-overrides.js`,/antd-mobile/g,'antd');
    }
    modifyFile(`${dir}/package.json`,'mobile-template',dir)
    console.log('安装完成，请执行一下命令');
    console.log(`cd ${dir}`);
    console.log('yarn 或者 npm install')
    console.log('-----------------------');
    console.log('yarn start:启动网页');
    console.log('yarn build:构建工程');
}

/**
 * @description 创建组件模板工程
 * @author Huang Li
 * @date 2018-07-25
 * @param {*} dir
 */
function createComponent(dir) {
    console.log('下载中请等待...');
    const url='https://github.com/huangliop/hummer-component-template.git';
    exec(`git clone ${url} ${dir}`);
    if(process.platform==='win32'){
        exec(`rmdir ${dir}\\.git /s /q`); 
    }else{
        exec(`rm -rf ${dir}/.git`); 
    }
    modifyFile(`${dir}/package.json`,'hummer-component-template',dir)
    
    console.log('安装完成，请执行一下命令');
    console.log(`cd ${dir}`);
    console.log('npm install')
} 

/**
 * @description 替换文件内容
 * @author Huang Li
 * @date 2018-07-26
 * @param {*} path
 * @param {*} orgStr
 * @param {*} replaceStr
 */
function modifyFile(path,orgStr,replaceStr) {
    const data= fs.readFileSync(path,'utf-8');
    fs.writeFileSync(path,data.replace(orgStr,replaceStr),'utf-8');
}

if(process.argv.length!=4){
    showHelp(true);
    return;
}
switch (process.argv[2]) {
    case 'mobile':  
    case 'pc': 
        install(process.argv[2],process.argv[3]);
        break;
    case 'component':
        createComponent(process.argv[3])
        break;
    case '-h':
        showHelp();
        break;
    default:
        showHelp(true);
        break;
}